// =============================================
//       Classes mixins by Gary Hepting 
//          Last Updated:2013-3-05
// =============================================




// grid classes
@mixin grid-classes() {

  .container          { @extend %container; }
  .row                { @extend %row; }
  .column             { @extend %column; }
  .centered           { @extend %centered; }

  $numbers: one two three four five six seven eight nine ten eleven twelve;
  $fractions: whole half third fourth fifth sixth seventh eighth ninth tenth eleventh twelfth;
  $fractions-plural: wholes halves thirds fourths fifths sixths sevenths eighths ninths tenths elevenths twelfths;

  @for $i from 1 through length($numbers) {
    .#{nth($fractions, $i)},
    .#{nth($fractions-plural, $i)} {
      width: percentage(1 / $i);
      @extend %column;
      @for $width from 1 through $i {
        &.#{nth($numbers, $width)} {
          width: percentage($width / $i);
          @extend %column;
        }
      }
      @for $right-left-skip from 1 through $i - 1 {
        &.right-#{nth($numbers, $right-left-skip)} {
          left: percentage($right-left-skip / $i);
        }
        &.left-#{nth($numbers, $right-left-skip)} {
          right: percentage($right-left-skip / $i);
        }
        &.skip-#{nth($numbers, $right-left-skip)} {
          margin-left: percentage($right-left-skip / $i);
        }
      }
    }
  }

}

// grid classes responsive
@mixin grid-responsive($both: true) {
  // responsive grid
  .half, .halves,
  .third, .thirds,
  .fourth, .fourths,
  .fifth, .fifths,
  .sixth, .sixths,
  .seventh, .sevenths,
  .eighth, .eighths,
  .ninth, .ninths,
  .tenth, .tenths,
  .eleventh, .elevenths,
  .twelfth, .twelfths {
    @if $both {
      &:not(.small-tablet):not(.mobile) {
        width:100% !important;
        float:none;
        clear:both;
        // reset push
        &.right-one,
        &.right-two,
        &.right-three,
        &.right-four,
        &.right-five,
        &.right-six,
        &.right-seven,
        &.right-eight,
        &.right-nine,
        &.right-ten,
        &.right-eleven  { left:0; }
        // reset pull
        &.left-one,
        &.left-two,
        &.left-three,
        &.left-four,
        &.left-five,
        &.left-six,
        &.left-seven,
        &.left-eight,
        &.left-nine,
        &.left-ten,
        &.left-eleven   { right:0; }
        // reset offset
        &.skip-one,
        &.skip-two,
        &.skip-three,
        &.skip-four,
        &.skip-five,
        &.skip-six,
        &.skip-seven,
        &.skip-eight,
        &.skip-nine,
        &.skip-ten,
        &.skip-eleven   { margin-left:0; }
      }
    }
    @else {
      &:not(.mobile) {
        width:100% !important;
        float:none;
        clear:both;
        // reset push
        &.right-one,
        &.right-two,
        &.right-three,
        &.right-four,
        &.right-five,
        &.right-six,
        &.right-seven,
        &.right-eight,
        &.right-nine,
        &.right-ten,
        &.right-eleven  { left:0; }
        // reset pull
        &.left-one,
        &.left-two,
        &.left-three,
        &.left-four,
        &.left-five,
        &.left-six,
        &.left-seven,
        &.left-eight,
        &.left-nine,
        &.left-ten,
        &.left-eleven   { right:0; }
        // reset offset
        &.skip-one,
        &.skip-two,
        &.skip-three,
        &.skip-four,
        &.skip-five,
        &.skip-six,
        &.skip-seven,
        &.skip-eight,
        &.skip-nine,
        &.skip-ten,
        &.skip-eleven   { margin-left:0; }
      }
    }
  }
}
